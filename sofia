#!/usr/bin/env bash

#Help
function help {
  echo "% Sofia's Help Module %"
  echo "For creating a new project: sofia new <project_name>"
  echo "For creating a new slim project: sofia slim <project_name>"
  echo "For version: sofia --version or sofia -v"
  echo "For update: sofia --update or sofia -u"
  echo "For help: sofia --help or sofia -help"
  echo "To run: sofia run"
  echo "To compile: sofia compile"
  echo "Installed packages: "
  echo "Skeleton"
  echo "Normalize"
  echo "Gulp"
  exit
}

function add_gitignore {
  echo "
# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
node_modules
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db" > .gitignore
}

function add_html {
  echo "
<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='UTF-8'>
    <title>Sofia</title>
    <meta name='viewport' content='initial-scale=1, maximum-scale=1'>
    <link rel='stylesheet' href='css/vendor/skeleton.css'>
    <link rel='stylesheet' href='css/style.css'>
    <link href='https://fonts.googleapis.com/css?family=Lato:300' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Tangerine' rel='stylesheet' type='text/css'>
  </head>
  <body>
      <h1 class='title'>Love, <br> <span>Sofia</span>.</h1>
      <script src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js'></script>
      <script src='js/main.js'></script>
  </body>
</html>" > index.html
}

function add_gulpfile {
echo "
var gulp    = require('gulp'),
    sass    = require('gulp-sass'),
    gls     = require('gulp-live-server'),
    watch   = require('gulp-watch');

function reportError()
{
  console.log('Hey! You have an error in your Sass file, go check it out!')
}

gulp.task('serve', function(){
    var server = gls.static('/', 8080);
    server.start();
});

gulp.task('sass-compile', function(){
    gulp.src('css/**.scss')
    .pipe(watch('css/**.scss'))
    .pipe(sass().on('error', reportError))
    .pipe(gulp.dest('css/'));
});

gulp.task('default', ['sass-compile', 'serve']);
" > gulpfile.js
}

function add_css {
echo "
@import 'variables';
@import 'mixins';

body {
  margin: 0;
  padding: 0;
  height: 100vh;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

.title {
  font-family: 'Lato', sans-serif;
  font-size: 20px;
  font-weight: 100;
  letter-spacing: 3px;
  span { font-family: 'Tangerine', cursive; font-size: 40px; margin-left: 20px; }
}" > style.scss
}

function add_package_json {
echo '
{
  "name": "your_app",
  "version": "1.0.0",
  "description": "Your description goes here!",
  "main": "you_js_file_here.js",
  "scripts": {},
  "author": "Your name goes here!",
  "license": "ISC",
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-live-server": "^0.0.29",
    "gulp-sass": "^2.1.1",
    "gulp-watch": "^4.3.5"
  }
}' > package.json
}

function download_skeleton {
  mkdir vendor && cd vendor
  curl https://gist.githubusercontent.com/oelizondo/c32a89f50dabd2520467/raw/78f3b4eb1a7c18db3459d25709a649a3a2d0001f/skeleton.css -o skeleton.css
}

function add_js {
  touch js/main.js
}
#Sofia's Version
if [ "$1" == "--version" ] || [ "$1" == "-v" ]; then
  echo 'version 0.2.6'
  exit
fi

#Sofia's help
if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
  help
fi

#Sofia's Update Module
if [ "$1" == "--update" ] || [ "$1" == "-u" ]; then
  echo "Updating!"
  cd
  sudo rm -rf ~/.sofia
  curl -L https://raw.githubusercontent.com/oelizondo/Sofia/master/install.sh | sh
  exit
fi

if [ "$1" == "run" ]; then
  if [ ! -f gulpfile.js ]; then
    python -m SimpleHTTPServer
  else
    gulp
  fi
  exit
fi

if [ "$1" == "compile" ]; then
  mkdir build
  cp -R assets build
  cp *.html build
  cp -R css/*.css build/css
  cp -R js build/js
  exit
fi

if [ "$1" == "slim" ]; then

  mkdir $2 && cd $2

  mkdir js css

  touch index.html css/style.css js/main.js

  Echo 'Sofia slim version is done'

  exit
fi

#Starts a new Sofia Project
if [ "$1" == "new" ]; then

  if [ "$3" == "--landing" ]; then
    git clone https://github.com/oelizondo/sofia_template_1.git
    cp -R sofia_template_1 $2
    rm -rf sofia_template_1
    exit
  fi

  mkdir $2 && cd $2

  # Starts project scaffold
  echo "Creating $2..."
  add_gitignore
  add_html
  add_gulpfile
  mkdir assets js css
  cd assets
  mkdir images fonts videos
  cd ..
  add_js
  cd css
  add_css
  touch _variables.scss _mixins.scss
  if [ "$3" != "--ns" ]; then
    download_skeleton
  fi
  cd ..
  cd ..

  add_package_json

  git init
  git add -A
  git commit -m "Initial commit, installs dependencies"
  git checkout -b dev

  echo 'Initial push is pending.'
  echo 'Sofia is done! Cd into your project and run gulp to start working!'
else
  help
fi
